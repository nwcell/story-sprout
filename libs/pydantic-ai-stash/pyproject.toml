[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pydantic-ai-stash"
version = "0.1.0"
description = "Efficient serialization and storage for Pydantic AI conversations with binary content"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Story Sprout Team" },
]
keywords = ["pydantic-ai", "serialization", "ai", "conversation", "binary-content"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "mcp[cli]>=1.14.0",
    "pydantic-ai>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/story-sprout/pydantic-ai-stash"
Repository = "https://github.com/story-sprout/pydantic-ai-stash"
Issues = "https://github.com/story-sprout/pydantic-ai-stash/issues"
Documentation = "https://pydantic-ai-stash.readthedocs.io"

[tool.hatch.build.targets.wheel]
packages = ["src/pydantic_ai_stash"]

[tool.hatch.version]
path = "src/pydantic_ai_stash/__init__.py"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
strict = true
warn_unreachable = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pydantic_ai_stash",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "ruff>=0.13.0",
]
