[project]
name = "story-sprout"
version = "0.2.0"
description = "A Django-based storytelling platform with AI assistance"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # Django Core
    "django>=5.2.4",
    "django-allauth>=65.10.0",
    "django-browser-reload>=1.18.0",
    "django-cotton>=2.1.3",
    "django-crispy-forms>=2.4",
    "django-environ>=0.12.0",
    "django-htmx>=1.23.2",
    "django-markdownx>=4.0.9",
    "django-ninja>=1.4.3",
    "django-ordered-model>=3.7.4",
    "django-render-block>=0.11",
    "django-tailwind>=4.2.0",
    "django-template-partials>=25.1",
    "crispy-tailwind>=1.0.3",
    # Async & Real-time
    "daphne>=4.2.1",
    "django-eventstream>=5.3.2",
    # Celery & Task Processing
    "celery>=5.5.3",
    "celery-typed",
    "django-celery-results>=2.6.0",
    "flower>=2.0.1",
    # AI & LLM Integration
    "pydantic-ai>=1.0.1",
    "pydantic-ai-stash",
    "google-genai>=1.33.0",
    "litellm>=1.74.3",
    # MCP (Model Context Protocol)
    "django-mcp-server>=0.5.6",
    "fastmcp>=2.12.3",
    "mcp>=1.14.0",
    # Database & Storage
    "psycopg[binary]>=3.2.9",
    "redis>=6.2.0",
    # Web Server & Performance
    "gunicorn>=23.0.0",
    "whitenoise[brotli]>=6.9.0",
    # Utilities
    "cookiecutter>=2.6.0",
    "pillow>=11.3.0",
    "psutil>=7.0.0",
    "requests>=2.32.4",
    "stripe>=12.3.0",
    # Documentation
    "mkdocs>=1.6.1",
    "mkdocs-awesome-nav>=3.2.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-material>=9.6.18",
    "mkdocs-minify-plugin>=0.8.0",
    # Development Tools
    "python-lsp-server>=1.13.1",
    "jupyterlab>=4.3.6",
    "loguru>=0.7.3",
    "colorlog>=6.9.0",
    "rich>=14.1.0",
]

[tool.uv]
managed = true

[tool.uv.sources]
pydantic-ai-stash = { path = "../_libs/pydantic-ai-stash", editable = true }
celery-typed = { path = "../_libs/celery-typed", editable = true }


[project.optional-dependencies]
dev = [
    "pre-commit>=4.3.0",
    "ruff>=0.12.9",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-django>=4.11.1",
    "pytest-env>=1.1.5",
    "pytest-xdist>=3.8.0",
    "ipykernel>=6.30.1",
    "watchdog>=6.0.0",
]

[tool.ruff]
line-length = 119
fix = true
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]
lint.pydocstyle.convention = "google"

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
docstring-code-line-length = 79

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["test_*.py", "*_test.py", "tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = [
    "src",
]
env = [
    "DJANGO_ENV=test",
    "SECRET_KEY=django-insecure-test-key-only-for-testing-do-not-use-in-production",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--reuse-db",
    "-v",
    "--tb=short",
]
testpaths = [
    "src",
]
norecursedirs = [
    ".git",
    ".pytest_cache",
    "__pycache__",
    "*.egg-info",
    ".venv",
]
